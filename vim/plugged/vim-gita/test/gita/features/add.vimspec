Describe gita#features#add
  Before
    Init

    let gita = gita#get()
    let gita.operations._previous_args = []
    function! gita.operations.add(...) abort
      call add(self._previous_args, a:000)
    endfunction
  End

  Context #exec([{options}, {config}])
    It should call 'gita.operations.add' internally
      call gita#features#add#exec({
            \ 'v': 1, 'verbose': 1,
            \ 'f': 1, 'force': 1,
            \ 'A': 1, 'all': 1,
            \ 'ignore-removal': 1,
            \ 'ignore-errors': 1,
            \})
      Assert Equals(gita.operations._previous_args, [[{
            \ 'v': 1, 'verbose': 1,
            \ 'f': 1, 'force': 1,
            \ 'A': 1, 'all': 1,
            \ 'ignore-removal': 1,
            \ 'ignore-errors': 1,
            \}, {}]])
    End

    It should remove unknown options internally
      call gita#features#add#exec({
            \ 'unknown_option': 1,
            \})
      Assert Equals(gita.operations._previous_args, [[{}, {}]])
    End
  End

  Context #command({bang}, {range}[, {cmdline}])
    It should automatically expand '%' to absolute path
      let g:gita#features#add#default_options = {}
      call gita#features#add#command('', [0, 0], '-- %')
      " Note: git add requires REAL path
      Assert Equals(gita.operations._previous_args, [[{
            \ '--': gita#utils#path#real_abspath(['%']),
            \}, { 'echo': 'both' }]])
    End
    It should automatically add the current buffer to '--'
      let g:gita#features#add#default_options = {}
      call gita#features#add#command('', [0, 0])
      " Note: git add requires REAL path
      Assert Equals(gita.operations._previous_args, [[{
            \ '--': gita#utils#path#real_abspath(['%']),
            \}, { 'echo': 'both' }]])
    End
    It should automatically add default options
      let g:gita#features#add#default_options = {
            \ 'verbose': 1,
            \ 'force': 1,
            \ 'all': 1,
            \}
      call gita#features#add#command('', [0, 0])
      Assert Equals(gita.operations._previous_args, [[{
            \ '--': gita#utils#path#real_abspath(['%']),
            \ 'verbose': 1,
            \ 'force': 1,
            \ 'all': 1,
            \}, { 'echo': 'both' }]])
    End
  End

  Context #complete({arglead}, {cmdline}, {cursorpos})
    It should call ArgumentParser.complete function
      Assert True(exists('*gita#features#add#complete'))
    End
  End
End
